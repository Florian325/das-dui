# Format, Lint, Test and Build on Pull Request

name: Format, Lint, Test and Build on Pull Request

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    format:
        name: Formats the project
        runs-on: ubuntu-latest
        steps:
            - name: Setup Repo
              uses: actions/checkout@v4

            - name: Enable Corepack before setting up Node
              run: corepack enable

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20.x
                  cache: "yarn"

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

            - name: Restore node_modules from cache
              uses: actions/cache@v4
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install Dependencies
              run: yarn install --frozen-lockfile

            - name: Format
              run: yarn worksapces:format:check

    lint:
        needs: format
        name: Lints the project
        runs-on: ubuntu-latest
        steps:
            - name: Setup Repo
              uses: actions/checkout@v4

            - name: Enable Corepack before setting up Node
              run: corepack enable

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20.x
                  cache: "yarn"

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

            - name: Restore node_modules from cache
              uses: actions/cache@v4
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install Dependencies
              run: yarn install --frozen-lockfile

            - name: Lint
              run: yarn worksapces:lint:check
